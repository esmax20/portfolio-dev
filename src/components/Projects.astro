---
import PythonIcon from "./icons/Python.astro";
import GitHubIcon from "./icons/GitHub.astro";
import TensorFlowIcon from "./icons/TensorFlow.astro";
import LinkButton from "./LinkButton.astro";
import LinkIcon from "./icons/Link.astro";
import JavascriptIcon from "./icons/Javascript.astro"
import ReactIcon from "./icons/React.astro"

const TAGS = {
    PYTHON: {
        name: "Python",
        class: "bg-white text-black",
        icon: PythonIcon,
    },
    TENSORFLOW: {
        name: "TensorFlow",
        class: "bg-white text-black",
        icon: TensorFlowIcon,
    },
    JAVASCRIPT: {
        name: "JavaScript",
        class: "bg-white text-black",
        icon: JavascriptIcon,
    },
    REACT: {
        name: "React",
        class: "bg-white text-black",
        icon: ReactIcon,
    },
};
const PROJECTS = [
    {
        title: "Datos de Países",
        description: `Es un proyecto en el que se realizan peticiones http a la API 
            https://studies.cs.helsinki.fi/restcountries/. Se escribe el país del cual se desea 
            adquirir información y cuando la lista solo sea de un país se devuelve la 
            información completa del mismo.`,
        link: "https://65d672f723e04913596b1232--mellow-bavarois-850d90.netlify.app/",
        github: "https://github.com/esmax20/Data-for-Countries",
        image: "data-for-countries.png",
        tags: [TAGS.JAVASCRIPT, TAGS.REACT],
    },
    {
        title: "Reconocedor de Patentes",
        description: `Realizado como parte del proyecto final de grado para la carrera de 
            Ingenieria en Informática, corresponde a un modelo de deep learning del "Tensorflow Object Detection Model Garden"
            re-entrenado para detectar patentes de vehículos y leerlas mediante las librerías de PyTesseract-OCR.`,
        link: "https://colab.research.google.com/github/esmax20/Reconocedor-de-Patentes/blob/main/Prueba_Reconocedor_de_Patentes.ipynb",
        github: "https://github.com/esmax20/Reconocedor-de-Patentes",
        image: "reconocedor_colab.png",
        tags: [TAGS.PYTHON, TAGS.TENSORFLOW],
    },
];
---

<div class="flex flex-col gap-y-16">
    {
        PROJECTS.map(({ title, description, image, tags, link, github }) => (
            <article class="flex flex-col space-x-0 space-y-8 group md:flex-row md:space-x-8 md:space-y-0">
                <div class="w-full md:w-1/2">
                    <div class="relative flex flex-col items-center col-span-6 row-span-5 gap-8 transition duration-500 ease-in-out transform shadow-xl overflow-clip rounded-xl sm:rounded-xl md:group-hover:-translate-y-1 md:group-hover:shadow-2xl lg:border lg:border-gray-800 lg:hover:border-gray-700 lg:hover:bg-gray-800/50">
                        <img
                            class="object-cover object-top w-full h-56 transition duration-500 sm:h-full md:scale-110 md:group-hover:scale-105"
                            loading="lazy"
                            src={image}
                            alt={`Captura del proyecto 'Sistema de Automatización de Accesos a Estacionamiento'`}
                        />
                    </div>
                </div>
                <div class="w-full md:w-1/2 md:max-w-lg">
                    <h3 class="text-2xl font-bold text-gray-800 dark:text-gray-100">
                        {title}
                    </h3>
                    <div class="flex flex-wrap mt-2">
                        <ul class="flex flex-row mb-2 gap-x-2">
                            {tags.map((tag) => (
                                <li>
                                    <span
                                        class={`flex gap-x-2 border-2 rounded-full text-xs ${tag.class} py-1 px-2 `}
                                    >
                                        <tag.icon class="size-4" />
                                        {tag.name}
                                    </span>
                                </li>
                            ))}
                        </ul>

                        <div class="mt-2 text-gray-700 dark:text-gray-400">
                            {description}
                        </div>

                        <footer class="flex items-end justify-start mt-4 gap-x-4">
                            {github && (
                                <LinkButton href={github}>
                                    <GitHubIcon class="size-6" />
                                    Code
                                </LinkButton>
                            )}
                            {link && (
                                <LinkButton href={link}>
                                    <LinkIcon class="size-4" />
                                    Preview
                                </LinkButton>
                            )}
                        </footer>
                    </div>
                </div>
            </article>
        ))
    }
</div>
